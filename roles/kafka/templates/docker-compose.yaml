
version: '3'
services:
  zoo1:
    container_name: zoo1
    image: registry.dustess.com:9000/base/zookeeper:3.4.13
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
    volumes:
      - /data/zookeeper/data:/data
      - /data/zookeeper/datalog:/datalog
      - /etc/localtime:/etc/localtime:ro # ro的意思是只读(read-only)模式，可以保证其挂载卷不被 Docker 容器内部文件系统配置所覆盖
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=10.134.73.35:2888:3888 server.2=10.134.73.32:2888:3888 server.3=10.134.73.42:2888:3888
    network_mode: host
  kafka1:
    container_name: kafka1
    image: registry.dustess.com:9000/base/kafka:2.12-2.1.0
    restart: always
    hostname: kafka1
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.134.73.35:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_NUM_PARTITIONS: 12
      KAFKA_ZOOKEEPER_CONNECT: 10.134.73.35:2181,10.134.73.32:2181,10.134.73.42:2181
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_HEAP_OPTS: -Xmx2G -Xms2G
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 1048576000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 11000000
    volumes:
      - /data/kafka:/kafka
      - /etc/localtime:/etc/localtime:ro # ro的意思是只读(read-only)模式，可以保证其挂载卷不被 Docker 容器内部文件系统配置所覆盖 depends_on:
    depends_on:
      - zoo1
  kafka-manager:
    image: registry.dustess.com:9000/base/kafka-manager
    environment:
      ZK_HOSTS: 10.134.73.35:2181,10.134.73.32:2181,10.134.73.42:2181
    ports:
      - "10.134.73.35:9900:9000"
    depends_on:
      - zoo1
      - kafka1
